; supervisor config file for celery, copied from /etc/supervisor/supervisord.conf
; but using /usr/var instead of /var

[unix_http_server]
file=/usr/var/run/supervisor.sock   ; (the path to the socket file)
chmod=0700                       ; sockef file mode (default 0700)

[supervisord]
logfile=/usr/var/log/supervisord.log ; (main log file;default $CWD/supervisord.log)
pidfile=/usr/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
childlogdir=/usr/var/log/            ; ('AUTO' child log dir, default $TEMP)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///usr/var/run/supervisor.sock ; use a unix:// URL  for a unix socket

[program:celery]
command=celery worker -A invenio.celery.celery --loglevel=INFO
user=lwosf
numprocs=1
stdout_logfile=/usr/var/log/celery-worker.log
stderr_logfile=/usr/var/log/celery-worker.log
autostart=true
autorestart=true
startsecs=10
; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600
; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true


[program:celerybeat]
command=celery beat -A invenio.celery.celery --loglevel=INFO
user=lwosf
numprocs=1
stdout_logfile=/usr/var/log/celery-beat.log
stderr_logfile=/usr/var/log/celery-beat.log
autostart=true
autorestart=true
startsecs=10

FROM ubuntu:trusty
MAINTAINER aeonium <info@aeonium.eu>

##########################################################################################################
# this is taken from the python images of docker
# https://github.com/docker-library/python/

# remove several traces of python
RUN apt-get purge -y python.*

# http://bugs.python.org/issue19846
# > At the moment, setting "LANG=C" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8

RUN apt-get update && apt-get install -y --no-install-recommends \
        ca-certificates \
        libsqlite3-0 \
        libssl1.0.0 \
    && rm -rf /var/lib/apt/lists/*

# gpg: key 18ADD4FF: public key "Benjamin Peterson <benjamin@python.org>" imported
RUN gpg --keyserver ha.pool.sks-keyservers.net --recv-keys C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF

ENV PYTHON_VERSION 2.7.10

# if this is called "PIP_VERSION", pip explodes with "ValueError: invalid truth value '<VERSION>'"
ENV PYTHON_PIP_VERSION 7.1.2

RUN set -x \
    && buildDeps=' \
        curl \
        gcc \
        libbz2-dev \
        libc6-dev \
        libncurses-dev \
        libreadline-dev \
        libsqlite3-dev \
        libssl-dev \
        make \
        xz-utils \
        zlib1g-dev \
    ' \
    && apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \
    && mkdir -p /usr/src/python \
    && curl -SL "https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz" -o python.tar.xz \
    && curl -SL "https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz.asc" -o python.tar.xz.asc \
    && gpg --verify python.tar.xz.asc \
    && tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
    && rm python.tar.xz* \
    && cd /usr/src/python \
    && ./configure --enable-shared --enable-unicode=ucs4 \
    && make -j$(nproc) \
    && make install \
    && ldconfig \
    && curl -SL 'https://bootstrap.pypa.io/get-pip.py' | python2 \
    && pip install --no-cache-dir --upgrade pip==$PYTHON_PIP_VERSION \
    && find /usr/local \
        \( -type d -a -name test -o -name tests \) \
        -o \( -type f -a -name '*.pyc' -o -name '*.pyo' \) \
        -exec rm -rf '{}' + \
    && apt-get purge -y --auto-remove $buildDeps \
    && rm -rf /usr/src/python
##########################################################################################################

RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get -qy install --fix-missing --no-install-recommends curl ca-certificates \
    && curl -sL https://deb.nodesource.com/setup | bash - \
    && echo "deb http://repository.egi.eu/sw/production/cas/1/current egi-igtf core" > /etc/apt/sources.list.d/egi-trustanchors.list \
    && curl -s https://dist.eugridpma.info/distribution/igtf/current/GPG-KEY-EUGridPMA-RPM-3 | apt-key add -

RUN apt-get update \
    && apt-get -qy upgrade --fix-missing --no-install-recommends \
    && DEBIAN_FRONTEND=noninteractive apt-get -qy install --fix-missing --no-install-recommends \
        gcc \
        git \
        libffi-dev \
        libjpeg-dev \
        libmysqlclient-dev \
        libssl-dev \
        libxslt-dev \
        nodejs \
        supervisor \
        python-pip \
        python-dev \ 
    && apt-get -qy install ca-policy-egi-core \
    && update-rc.d -f supervisord remove \
    && apt-get clean autoclean \
    && apt-get autoremove -y \
    && rm -rf /var/lib/{apt,dpkg}/ \
    && (find /usr/share/doc -depth -type f ! -name copyright -delete || true) \
    && (find /usr/share/doc -empty -delete || true) \
    && rm -rf /usr/share/man/* /usr/share/groff/* /usr/share/info/* 

RUN npm update \
    && npm install --silent -g bower less clean-css uglify-js requirejs

RUN pip install -U pip uwsgi

RUN mkdir /lwosf
WORKDIR /lwosf

COPY requirements.txt /lwosf
RUN pip install -r requirements.txt --exists-action i

#RUN ln -s /usr/lib/python2.7/plat-*/_sysconfigdata_nd.py /usr/lib/python2.7/

COPY . /lwosf

RUN pip install -e .

# Add the CAs to the requests bundle
RUN cat /etc/grid-security/certificates/*.pem >> \
    $(python -c 'import pkg_resources; print pkg_resources.resource_filename("requests", "cacert.pem")')

RUN mkdir -p /usr/local/var/log/ /usr/local/var/invenio.base-instance/ \
             /usr/local/var/run/

RUN useradd --home-dir /home/lwosf --create-home --shell /bin/bash --uid 1000 lwosf
RUN chown -R lwosf:lwosf /lwosf /usr/local/var/

USER lwosf

CMD ["bash"]
